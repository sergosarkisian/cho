###########################
###  acl_check_rcpt     ###
###########################

acl_check_rcpt:

    ###
###SCORES###
warn
set acl_c_section = acl_check_rcpt
set acl_c_local_part = $local_part
set acl_c_domain = $domain 
set acl_c_recipient = $local_part@$domain
###SCORES###
    ###

.ifdef LOGVAR_TRACE    
warn
	logwrite ="trace", "section":"$acl_c_section", \
			"sender_helo_name":"$sender_helo_name"
.endif

.ifdef DISCARD_NO_BOUNCE_TO
discard 
        condition = ${lookup{$local_part@$domain}wildlsearch{/media/sysdata/rev5/techpool/ontology/mail/exim/mta-router/data/no_bounce_to}{yes}{no}}
.endif

        
.ifdef SCORE_ADDR_BADSYMBOLS_LOCAL
  # Restricted charas in address (local) => Score: SCORE_ADDR_BADSYMBOLS_LOCAL     
  warn    
		domains       = +local_domains
		local_parts   = ^[.] : ^.*[@%!/|]
		#
		set acl_c_rule = score_addr_badsymbols_local
		set acl_c_score_mta_inc = SCORE_ADDR_BADSYMBOLS_LOCAL
		set acl_c_score_reason = Restricted charas in address (local)
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_addr_badsymbols_local = 1		
.endif


.ifdef SCORE_ADDR_BADSYMBOLS_NONLOCAL
  # Restricted charas in address => Score: SCORE_ADDR_BADSYMBOLS_NONLOCAL              
  warn    
		domains       = !+local_domains
		local_parts   = ^[./|] : ^.*[@%!] : ^.*/\\.\\./
		#
		set acl_c_rule = score_addr_badsymbols_nonlocal
		set acl_c_score_mta_inc = SCORE_ADDR_BADSYMBOLS_NONLOCAL
		set acl_c_score_reason = Restricted charas in address
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_addr_badsymbols_nonlocal = 1			
.endif

		
.ifdef SCORE_FROM_EQ_TO
  # <From> == <To> => Score: SCORE_FROM_EQ_TO
  warn 
		!authenticated = *
		hosts = ! +local_networks		
		condition = ${if eq{$sender_address}{$local_part@$domain}{yes}{no}}
		#
		set acl_c_rule = score_from_eq_to
		set acl_c_score_mta_inc = SCORE_FROM_EQ_TO
		set acl_c_score_reason = <From> == <To>
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_from_eq_to = 1			
.endif

		
.ifdef SCORE_SPAMTRAP
  # Spamtrap address => Score: SCORE_SPAMTRAP   
  warn 
		local_parts = spam : spamtrap : honey : honeypot
		#
		set acl_c_rule = score_spamtrap
		set acl_c_score_mta_inc = SCORE_SPAMTRAP
		set acl_c_score_reason = Spamtrap address
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_spamtrap = 1			
.endif
		
		
# Hosts from +local_networks => ACCEPT		
  accept 
		hosts         =  +local_networks
		#
		set acl_c_score_reason = Mail from +local_networks
		set acl_c_rule = accept_from_10./8_net			
		set acl_c_msg_view = delivery
		set acl_c_acl_action = accept
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;		
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
   

# Auth clients => ACCEPT			  
  accept
		authenticated = *
		control       = submission/sender_retain  
		#
		set acl_c_score_reason = Mail from auth client
		set acl_c_rule = accept_auth			
		set acl_c_msg_view = delivery
		set acl_c_acl_action = accept
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;		
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"


.ifdef SCORE_NON_AUTH_RELAYING
# Relaying for not auth users => Score: SCORE_NON_AUTH_RELAYING
  warn 
		domains = !+local_domains : !+hosted_domains : !+registred_domains : !+relaytomx_domains   
		#
		set acl_c_rule = score_non_auth_relaying				
		set acl_c_score_mta_inc = SCORE_NON_AUTH_RELAYING
		set acl_c_score_reason = Non-auth relaying
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_non_auth_relaying = 1			
.endif

		
#  	Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard) => DENY
deny 
		message = Sorry, your spam score is very high
		condition = ${if >={$acl_c_score_mta}{$acl_c_deny_hard}{yes}{no}}
		#
		set acl_c_rule = delivery_deny_rcpt_1		
		set acl_c_score_reason = Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard)
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;					
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
	    
    
  # Unknown recipient => DENY
deny 
		message = Unknown recipient
		hosts = ! +local_networks		
		domains = +local_domains : +hosted_domains : +registred_domains      
		!verify = recipient
		#
		set acl_c_rule = delivery_deny_rcpt_unknown						
		set acl_c_score_reason = Unknown recipient
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"


.ifdef SCORE_NON_LOCAL_RECIPIENT_NOT_VERIFIED
  # Unknown external recipient by callout => Score: SCORE_NON_LOCAL_RECIPIENT_NOT_VERIFIED   
  warn
		domains = !+local_domains : !+hosted_domains : !+registred_domains : !+relaytomx_domains   
        !verify = recipient/callout=3s,connect=1s,maxwait=6s,defer_ok,use_sender
		#
		set acl_c_rule = score_non_local_recipient_not_verified
		set acl_c_score_mta_inc = SCORE_NON_LOCAL_RECIPIENT_NOT_VERIFIED
		set acl_c_score_reason = Unknown external recipient by callout
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_non_local_recipient_not_verified = 1			
.endif

    
accept 
		hosts = :
		control = dkim_disable_verify
		#
		set acl_c_score_reason = RCPT check
		set acl_c_rule = accept_rcpt_checks			
		set acl_c_msg_view = delivery
		set acl_c_acl_action = accept
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;		
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"


.ifdef SCORE_BOUNCE_RATELIMIT
  # Bounce ratelimit for recipient => Score: SCORE_BOUNCE_RATELIMIT
  warn 
		hosts      = !+local_networks
		senders    = :
		ratelimit  = 5 / 30m / per_rcpt / $local_part@$domain
		set acl_c3 = $local_part@$domain	
		#
		set acl_c_rule = score_bounce_ratelimit
		set acl_c_score_mta_inc = SCORE_BOUNCE_RATELIMIT
		set acl_c_score_reason = Bounce ratelimit for recipient
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_bounce_ratelimit = 1			
.endif


.ifdef SCORE_NONAUTH_CLIENTS
  # Not auth clients without relay ACL => Score: SCORE_NONAUTH_CLIENTS
  warn 
		!authenticated = *
        hosts = +local_networks
        !verify = sender
		#
		set acl_c_rule = score_nonauth_clients
		set acl_c_score_mta_inc = SCORE_NONAUTH_CLIENTS
		set acl_c_score_reason = Not auth clients without relay ACL
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_nonauth_clients = 1			
.endif


.ifdef SCORE_CHECK_SENDER
  # Unable to check sender => Score: SCORE_CHECK_SENDER 
  # Callout score is set via acl_m
 warn 
		hosts = ! +local_networks
        !verify = sender/callout=3s,connect=1s,maxwait=6s,defer_ok
		#
		set acl_c_score_check_sender_counts = 1
  
 warn 
		hosts = ! +local_networks
		condition = ${if >{$acl_c_score_check_sender_counts}{1}{yes}{no}}

		#
		set acl_c_rule = score_check_sender
		set acl_c_score_mta_inc = SCORE_CHECK_SENDER
		set acl_c_score_mta_reason = Unable to check sender by callout
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_check_sender = 1			
.endif    

   
  accept