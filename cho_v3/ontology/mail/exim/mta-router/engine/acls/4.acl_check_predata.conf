###########################
###  acl_check_predata  ###
###########################

acl_check_predata:

    ###
###SCORES###
warn
set acl_c_section = acl_check_predata
###SCORES###
    ###
    
.ifdef LOGVAR_TRACE
  warn
	logwrite ="trace", "section":"$acl_c_section", \
			"message_size":"$message_size", \
			"original_domain":"$original_domain", \
			"original_local_part":"$original_local_part", \
			"return_path":"$return_path"
.endif

			
.ifdef SCORE_EMPTY_SND_TO_MLT_TO
    #Empty sender for multiple To => Score: SCORE_EMPTY_SND_TO_MLT_TO
  warn
		senders = :
		condition = ${if >{$rcpt_count}{1}{yes}{no}}
		#
		set acl_c_rule = score_empty_snd_to_mlt_to
		set acl_c_score_mta_inc = SCORE_EMPTY_SND_TO_MLT_TO
		set acl_c_score_reason = Empty sender for multiple To
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
        set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
        #
        add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_empty_snd_to_mlt_to = 1			
.endif

	
#Accept if Score < SCORE_ACCEPT
accept
		condition = ${if <{$acl_c_score_mta}{SCORE_ACCEPT}{yes}{no}}
		## LOGWRITE NOT NEEDED			
	
	
#  	Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard) => DENY
deny 
		message = Sorry, your spam score is very high
		condition = ${if >={$acl_c_score_mta}{$acl_c_deny_hard}{yes}{no}}
		#
		set acl_c_rule = delivery_deny_predata_1				
		set acl_c_score_reason = Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard)
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;					
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
	    

.ifdef GREYLIST_ENABLED_GREY
#  core $acl_c_score_mta is > SCORE_ACCEPT => GREYLIST
defer 
		hosts         =  !+local_networks
        senders = !:
		!authenticated  = *
		!spf            = pass
		acl             = acl_greylist
		message         = GreyListed: please try again later
		delay          = 5s
.endif



accept
	