Tech:
* passive events -> Elixir
* active events -> RSyslog
* bus -> RSyslog
* security -> stunnel
* storage -> ES
* visual -> Elasticsearch
* Monitor agent (ES to zabbix) -> Elixir/Ruby
* Monitor server -> Zabbix


Идеи:

мониторинг - отслеживание траектории выпавшей метрики
метаформат описания метрик -> Zabbix, Elixir должны одинаково представлять метрики
Все сообщения - CEE-формат
Базовая структура - параметризованный JSON

на каждый уровень/зону ответственности - свой агент
приём на стороне клиента -> syslog, udp, tcp
поддержка логгирования из коммандной строки
Шина (bus) = queue, peer-based, flow-oriented, EventsperSec/BW control

Zabbix LLD как инструмент гибкой переконфигурации
переход событий в мониторинг - через агент
мониторинг-агент берёт n метрик за m минут (уникальных)


Q's:
* Базовая JSON-структура
* Как отразить в структуре "Zabbix-hosts"
* Основные идеи переписывания rsyslog DSL-шины
* Как реализовать мониторинг-агента
* Как обеспечить сходимость метрик
* Математика


