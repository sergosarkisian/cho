###########################
###  acl_greylist     ###
###########################	

acl_greylist:

    ###
###SCORES###
warn
set acl_c_section = acl_greylist
###SCORES###
    ###

  # clean expired greylist records at 00 and 30 of all day minutes
  warn  condition       = ${if or {{eq {${substr{10}{2}{$tod_zulu}} }{00}}{eq {${substr{10}{2}{$tod_zulu}} }{30}} }{yes}{no}}
        set acl_c4      = ${lookup pgsql{GREYLIST_CLEAN}}
        log_message     = clean expired greylist records

  # For regular deliveries, check greylist.

  # check greylist tuple, returning "accepted", "deferred" or "unknown"
  # in acl_c8, and the record id in acl_c9

  warn  set acl_c8       = ${lookup pgsql{GREYLIST_TEST}{$value}{result=unknown}}
        # here acl_c8 = "result=x id=y"
        set acl_c9       = ${extract{id}{$acl_c8}{$value}{-1}}
        # now acl_c9 contains the record id (or -1)
        set acl_c8       = ${extract{result}{$acl_c8}{$value}{unknown}}
        # now acl_c8 contains unknown/deferred/accepted
        log_message     = check greylist tuple, set '$acl_c8'

	# check if we know a certain triple, add and defer message if not => ACCEPT
	accept
		# if above check returned unknown (no record yet)
		condition        = ${if eq {$acl_c8} {unknown} {yes}}
		# then also add a record
		condition        = ${lookup pgsql{GREYLIST_ADD}{yes}{no}}
		#
		set acl_c_rule = delivery_greylist_deny_new
		set acl_c_msg_view = delivery
		set acl_c_acl_action = greylist_deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
        set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
	

  # now log, no matter what the result was
  # if the triple was unknown, we don't need a log entry
  # (and don't get one) because that is implicit through
  # the creation time above.
  
	.ifdef GREYLIST_ENABLED_LOG
		warn  condition        = ${lookup pgsql{GREYLIST_LOG}}
	.endif
	

  # check if the triple is still blocked  => ACCEPT
	accept
		# if above check returned deferred then defer
		condition        = ${if eq{$acl_c8} {deferred} {yes}}
		# and note it down
		condition        = ${lookup pgsql{GREYLIST_DEFER_HIT}{yes}{yes}}
		#
		set acl_c_rule = delivery_greylist_deny_too_fast
		set acl_c_msg_view = delivery
		set acl_c_acl_action = greylist_deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"

	# use a warn verb to count records that were hit
	warn  condition        = ${lookup pgsql{GREYLIST_OK_COUNT}}

	# use a warn verb to set a new expire time on automatic records,
	# but only if the mail was not a bounce, otherwise set to now().
	warn  !senders         = : postmaster@* : Mailer-Daemon@*
			condition        = ${lookup pgsql{GREYLIST_OK_NEWTIME}}
	warn  senders          = : postmaster@* : Mailer-Daemon@*
			condition        = ${lookup pgsql{GREYLIST_OK_BOUNCE}}
	deny
		#
		set acl_c_rule = delivery_greylist_accept
		set acl_c_msg_view = delivery
		set acl_c_acl_action = greylist_accept
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"

		#
