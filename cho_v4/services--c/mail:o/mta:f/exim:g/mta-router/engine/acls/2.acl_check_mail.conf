###########################  
###  acl_check_mail  ###
###########################

acl_check_mail:

    ###
###SCORES###
warn
#Core
set acl_c_deny_hard 	             = 1000
set acl_c_msg_class		     = mail
#Initial
set acl_c_known 		             = no
set acl_c_rule 			     = 0
set acl_c_score_mta 	             = 0
set acl_c_score_content         = 0
set acl_c_score_total               = 0
set acl_c_spamlog 		     = 0
set acl_c_message_id 	     = no
set acl_c_advlog 		             = i
set acl_c_advlog_inc_def         = warn
set acl_c_msg_view_def	     = score
set acl_c_acl_action_def         = add
set acl_c_local_part                 = $local_part
set acl_c_domain                     = $domain  
set acl_c_recipient                   = $local_part@$domain
set acl_c_score_dnsbl_count = 0
#
set acl_c_section 		= acl_check_mail

###SCORES###
    ###
		

.ifdef LOGVAR_TRACE    
warn
		logwrite ="trace", "section":"$acl_c_section", \
                "self_hostname":"$self_hostname", \
                "sender_address_domain":"$sender_address_domain", \
                "sender_address_local_part":"$sender_address_local_part"
.endif


.ifdef DISCARD_WELL_KNOWN_SPAMMERS
discard 
                !authenticated = *
                hosts = ! +local_networks
                condition = ${lookup{$sender_host_name}wildlsearch{/media/sysdata/rev5/techpool/ontology/mail/exim/mta-router/data/well_known_spammers}{yes}{no}}
discard 
                !authenticated = *
                hosts = ! +local_networks
                condition = ${lookup{$sender_address_domain}wildlsearch{/media/sysdata/rev5/techpool/ontology/mail/exim/mta-router/data/well_known_spammers}{yes}{no}}                
.endif


# sender blacklist => DENY
discard 
		message = Email in sender blacklist
		hosts = ! +local_networks
                condition = ${if exists {/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/acl/sender_blacklist} {${lookup{$sender_address}lsearch{/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/acl/sender_blacklist}{yes}{no}}}}
		#
		set acl_c_rule = delivery_deny_sender_blacklist
		set acl_c_score_reason = Email in sender blacklist
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta		
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"

		
# send as internal domain from outside => DENY
discard 
		message = Send as internal domain from outside
		hosts = ! +local_networks
                condition = ${if or{\
                        {eqi{$sender_address_domain}{local_domains}}\
                        {eqi{$sender_address_domain}{hosted_domains}}\
                        }\
                }
		!authenticated = *
		#
		set acl_c_rule = delivery_deny_sender_blacklist
		set acl_c_score_reason = Send as internal domain from outside
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta		
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"


.ifdef SCORE_HELO_EHLO
  # Incorrect HELO/EHLO => Score: SCORE_HELO_EHLO
  warn 
		!authenticated = *
                condition = ${if or{\
                            {eq{$sender_helo_name}{}}\
                            {match{$sender_helo_name}{\N^\d+$\N}}\
                            {match{$sender_helo_name}{\N^\w+$\N}}\
                            {match{$sender_helo_name}{\N^_+$\N}}\
                        }\
                    }
		#
		set acl_c_rule = score_helo_ehlo
		set acl_c_score_mta_inc = SCORE_HELO_EHLO                    
		set acl_c_score_reason = Bad HELO/EHLO
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta		
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason   
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_helo_ehlo = 1		
.endif
	
	
.ifdef SCORE_HELO_REQ
  # HELO required before MAIL => Score: SCORE_HELO_REQ
  warn
		condition = ${if eq{$sender_helo_name}{}}
		#
		set acl_c_rule = score_helo_req		
		set acl_c_score_mta_inc = SCORE_HELO_REQ                   
		set acl_c_score_reason = HELO required before MAIL
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def		
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_helo_req = 1		
.endif


.ifdef SCORE_HELO_SERVER_CRED
  # This server credentials in HELO => Score: SCORE_HELO_SERVER_CRED
  warn 
		!authenticated = *
                set acl_c_islocal = IS_SERVER_CRED_IN_HELO
                condition = ${if or{\
                            {eq{$sender_helo_name}{$interface_address}}\
                            {eqi{$sender_helo_name}{$primary_hostname}}\
                            {eq{$acl_c_islocal}{yes}}\
                          }\
                    }
		#
		set acl_c_rule = score_helo_server_cred				
		set acl_c_score_mta_inc = SCORE_HELO_SERVER_CRED                    
		set acl_c_score_reason = This server credentials in HELO
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def		
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_helo_server_cred	= 1		
.endif

		
.ifdef SCORE_NO_PTR	
  # No PTR => Score: SCORE_NO_PTR
  warn 
		!authenticated = *
                hosts = ! +local_networks
                condition = ${if eq{$sender_host_name}{}}
                condition = ${if exists {/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/score/score_no_ptr} {${lookup{$sender_address_domain}wildlsearch{/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/score/score_no_ptr}{no}{yes}}}}        
		#
		set acl_c_rule = score_no_ptr		
		set acl_c_score_mta_inc = SCORE_NO_PTR
		set acl_c_score_reason = No PTR
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_no_ptr	= 1		
.endif


.ifdef SCORE_PTR_NOTEQ_HELO
  # PTR != HELO => Score: SCORE_PTR_NOTEQ_HELO
  warn 
		!authenticated = *
                hosts = ! +local_networks
                condition = ${if !eqi{$sender_host_name}{$sender_helo_name}}
                condition = ${if exists {/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/score/score_ptr_noteq_helo} {${lookup{$sender_address_domain}wildlsearch{/media/sysdata/rev5/_context/conf/exim/$acl_c_scheme/score/score_ptr_noteq_helo}{no}{yes}}}}        		
		#
		set acl_c_rule = score_ptr_noteq_helo
		set acl_c_score_mta_inc = SCORE_PTR_NOTEQ_HELO
		set acl_c_score_reason = PTR != HELO
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_ptr_noteq_helo	= 1		
.endif


.ifdef SCORE_IS_DYN_PTR
  # DynDNS or dynamic PTR => Score: SCORE_IS_DYN_PTR
  warn 
		!authenticated = *
                hosts = ! +local_networks
                condition = ${lookup{$sender_host_name}wildlsearch{/media/sysdata/rev5/techpool/ontology/mail/exim/mta-router/data/dynamic_pools}{yes}{no}}
		#
		set acl_c_rule = score_is_dyn_ptr
		set acl_c_score_mta_inc = SCORE_IS_DYN_PTR
		set acl_c_score_reason = DynDNS or dynamic PTR
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_is_dyn_ptr	= 1		
.endif


#### DNSBL ####

.ifdef SCORE_DNSBL_SLBXBL
  # DNSBL - sbl-xbl.spamhaus.org  => Score: SCORE_DNSBL_SLBXBL
  warn 
		!authenticated = *
        hosts = ! +local_networks
        dnslists       = sbl-xbl.spamhaus.org
		#
		set acl_c_rule = score_dnsbl_slbxbl
		set acl_c_score_mta_inc = SCORE_DNSBL_SLBXBL
		set acl_c_score_reason = DNSBL - sbl-xbl.spamhaus.org
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_slbxbl	= 1		
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}		
.endif


.ifdef SCORE_DNSBL_MAILABUSE
  # DNSBL - relay.mail-abuse.org  => Score: SCORE_DNSBL_MAILABUSE
  warn
		!authenticated = *
                hosts = ! +local_networks
                dnslists       = relay.mail-abuse.org
                 #
		set acl_c_rule = score_dnsbl_mailabuse
		set acl_c_score_mta_inc = SCORE_DNSBL_MAILABUSE
		set acl_c_score_reason = DNSBL - relay.mail-abuse.org
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_mailabuse	= 1		
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}			
.endif

	
.ifdef SCORE_DNSBL_SPAMCOP
  # DNSBL - bl.spamcop.net  => Score: SCORE_DNSBL_SPAMCOP
  warn 
		!authenticated = *
                hosts = ! +local_networks
                dnslists       = bl.spamcop.net
		#
		set acl_c_rule = score_dnsbl_spamcop
		set acl_c_score_mta_inc = SCORE_DNSBL_SPAMCOP
		set acl_c_score_reason = DNSBL - bl.spamcop.net
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_spamcop	= 1		
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}		
.endif


.ifdef SCORE_DNSBL_ORDB
  # DNSBL - relays.ordb.org  => Score: SCORE_DNSBL_ORDB
  warn 
		!authenticated = *
                hosts = ! +local_networks
                dnslists       = relays.ordb.org
		#
		set acl_c_rule = score_dnsbl_ordb
		set acl_c_score_mta_inc = SCORE_DNSBL_ORDB
		set acl_c_score_reason = DNSBL - relays.ordb.org
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_ordb	= 1		
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}		
.endif

		
.ifdef SCORE_DNSBL_RFCIGNORANT
  # DNSBL - dns.rfc-ignorant.org  => Score: SCORE_DNSBL_RFCIGNORANT
  warn 
		!authenticated = *
                hosts = ! +local_networks
                dnslists       = dns.rfc-ignorant.org
		#
		set acl_c_rule = score_dnsbl_rfcignorant
		set acl_c_score_mta_inc = SCORE_DNSBL_RFCIGNORANT
		set acl_c_score_reason = DNSBL - dns.rfc-ignorant.org
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_rfcignorant	= 1		
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}			
.endif


.ifdef SCORE_DNSBL_BACKSCATTERER
  # DNSBL - ips.backscatterer.org  => Score: SCORE_DNSBL_BACKSCATTERER
  warn
		!authenticated = *
                hosts = ! +local_networks
                dnslists       = ips.backscatterer.org
		#
		set acl_c_rule = score_dnsbl_backscatterer
		set acl_c_score_mta_inc = SCORE_DNSBL_BACKSCATTERER
		set acl_c_score_reason = DNSBL - ips.backscatterer.org
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_dnsbl_backscatterer	= 1
		set acl_c_score_dnsbl_count = ${eval:$acl_c_score_dnsbl_count + 1}		
.endif

#### DNSBL ####


.ifdef SCORE_LOCALPART_ISNOT_AUTHID
  # Local part of sndr_addr != auth_addr  =>  Score: SCORE_LOCALPART_ISNOT_AUTHID
  warn  
		authenticated = *
                condition = ${if !eq{$sender_address}{$authenticated_id}{yes}{no}}
		#
		set acl_c_rule = score_localpart_isnot_authid
		set acl_c_score_mta_inc = SCORE_LOCALPART_ISNOT_AUTHID
		set acl_c_score_reason = Local part of sndr_addr != auth_addr
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_localpart_isnot_authid	= 1		
.endif

#### CALCULATED ####

.ifdef SCORE_DNSBL_INTERSECTIONS
  # if DNSBL count > 1  => Score: SCORE_DNSBL_INTERSECTIONS
  warn
		!authenticated = *
                hosts = ! 10.0.0.0/8
		condition = ${if >{$acl_c_score_dnsbl_count}{1}{yes}{no}}        
                #
                set acl_c_score_dnsbl_intersections = SCORE_DNSBL_INTERSECTIONS
                #
		set acl_c_rule = score_dnsbl_count
		set acl_c_score_mta_inc = ${eval:$acl_c_score_dnsbl_intersections * $acl_c_score_dnsbl_count}
		set acl_c_score_reason = DNSBL count is $acl_c_score_dnsbl_count 
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_mta_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"	
		#
		set acl_c_fact_mta_score_dnsbl_intersections = 1				
.endif


.ifdef SCORE_NON_VALID_PTR_WITH_DNSBL
  # if no PTR/DynDNS IP + DNSBL count > 0  => Score: SCORE_NON_VALID_PTR_WITH_DNSBL
  warn
		!authenticated = *
                hosts = ! 10.0.0.0/8
		condition = ${if or { {and { {> {$acl_c_score_dnsbl_count}{0}}{> {$acl_c_fact_mta_score_no_ptr}{0}} }} {and { {> {$acl_c_score_dnsbl_count}{0}}{> {$acl_c_fact_mta_score_is_dyn_ptr}{0}} }} }}      
		#
		set acl_c_rule = score_non_valid_ptr_with_dnsbl
		set acl_c_score_mta_inc = SCORE_NON_VALID_PTR_WITH_DNSBL
		set acl_c_score_reason = no PTR/DynDNS IP + DNSBL count > 0
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #        
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_mta_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"	
		#
		set acl_c_fact_mta_score_non_valid_ptr_with_dnsbl = 1		
.endif
#### CALCULATED ####


##SPF

set acl_c_spf_record = ${lookup dnsdb{spf=$sender_address_domain}} 


#  	SPF eq "v=spf1 -all" => DENY
deny 
		set acl_c_rule = deny		
		message = Sorry, your SPF policy has "-all" record
		condition = ${if eq {$acl_c_spf_record}{v=spf1 -all}}    
		#
		set acl_c_score_reason = SPF policy has "-all" record
		set acl_c_rule = delivery_deny_spf_exclude_all			
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
                set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;		
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"




## TODO  !!!!  BUGGY		
.ifdef SCORE_SPF_STRICT
  # Allowed SPF servers != sender server & our server  =>  Score: SCORE_SPF_STRICT
  warn  
                spf = !pass
                hosts = + spf_strict_domains
		#condition = ${} 
		condition = ${if or {{if match {$acl_c_spf_record}{a:{$GLOBAL_PRIMARY_HOSTNAME}}} {if match {$acl_c_spf_record}{include:{$GLOBAL_QUALIFY_DOMAIN}}}}}
		
		#
		set acl_c_rule = score_spf_strict
		set acl_c_score_mta_inc = SCORE_SPF_STRICT
		set acl_c_score_reason = Strict SPF policy
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def ; spf_received -> $spf_received; spf_result -> $spf_result;
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_spf_strict = 1			
.endif



.ifdef SCORE_SPF_TOO_OPEN
  # Allowed SPF servers contains "+all"  =>  Score: SCORE_SPF_TOO_OPEN
  warn  
		condition = ${if match {$acl_c_spf_record}{\\+all}}       
		#
		set acl_c_rule = score_spf_too_open
		set acl_c_score_mta_inc = SCORE_SPF_TOO_OPEN
		set acl_c_score_reason = SPF policy is too open ("+all")
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_spf_too_open = 1			
.endif


.ifdef SCORE_SPF_NON_LOCAL
  # Allowed SPF servers != sender server  =>  Score: SCORE_SPF_NON_LOCAL
  warn  
                spf = fail : softfail : neutral
                hosts = ! +local_networks        
		#
		set acl_c_rule = score_spf_non_local
		set acl_c_score_mta_inc = SCORE_SPF_NON_LOCAL
		set acl_c_score_reason = This sender is not valid due to SPF policy 
		set acl_c_msg_view = $acl_c_msg_view_def
		set acl_c_acl_action = $acl_c_acl_action_def
		set acl_c_advlog_inc = $acl_c_advlog_inc_def ; spf_received -> $spf_received; spf_result -> $spf_result;
		#
		set acl_c_score_prev = $acl_c_score_total
		set acl_c_score_mta = ${eval:$acl_c_score_mta + $acl_c_score_mta_inc}
		set acl_c_score_total = $acl_c_score_mta				
                set acl_c_spamlog = $acl_c_spamlog $acl_c_score_reason=+$acl_c_score_mta_inc;
                #
                add_header     = X-Spam-Score-Check: added $acl_c_score_mta_inc scores: $acl_c_score_reason        
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"
		#
		set acl_c_fact_mta_score_spf_non_local = 1			
.endif
     
     
##     



#  	Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard) => DENY
deny 
		set acl_c_rule = deny		
		message = Sorry, your spam score is very high
		condition = ${if >={$acl_c_score_mta}{$acl_c_deny_hard}{yes}{no}}
		#
		set acl_c_score_reason = Score $acl_c_score_mta is > deny_hard ($acl_c_deny_hard)
		set acl_c_rule = delivery_deny_checkmail_end			
		set acl_c_msg_view = delivery
		set acl_c_acl_action = deny
		set acl_c_advlog_inc = $acl_c_advlog_inc_def
                set acl_c_advlog = $acl_c_advlog \;  $acl_c_advlog_inc;		
		#		
		logwrite ="msg_class":"$acl_c_msg_class", "msg_view":"$acl_c_msg_view", "acl_action":"$acl_c_acl_action", "acl_section":"$acl_c_section", "acl_rule":"$acl_c_rule", "message_id":"$acl_c_message_id", "sender_host_address":"$sender_host_address", "sender_host_name":"$sender_host_name", "to":"$acl_c_recipient", "from":"$sender_address_local_part@$sender_address_domain", "from_server":"$sender_fullhost", "acl_score_reason":"$acl_c_score_reason", "acl_spamlog":"$acl_c_spamlog", "acl_score_mta":"$acl_c_score_mta", "acl_score_content":"$acl_c_score_content", "acl_score_total":"$acl_c_score_total", "acl_advlog_inc":"$acl_c_advlog_inc", "acl_advlog":"$acl_c_advlog", "acl_score_inc":"$acl_c_score_mta_inc", "acl_score_prev":"$acl_c_score_prev"

       
accept  